name: Build Free RustDesk with Stealth

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build-stealth:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    
    runs-on: ${{ matrix.platform }}
    
    steps:
    - name: Checkout RustDesk
      uses: actions/checkout@v4
      with:
        repository: rustdesk/rustdesk
        submodules: recursive
        
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Create stealth module
      run: |
        cat > src/stealth.rs << 'EOF'
use std::env;
use std::thread;
use std::time::Duration;

pub fn init_stealth() {
    let args: Vec<String> = env::args().collect();
    if args.iter().any(|arg| arg == "--stealth") {
        println!("Stealth mode activated");
        thread::sleep(Duration::from_secs(2));
    }
}
EOF

    - name: Modify main.rs
      run: |
        # 备份文件
        cp src/main.rs src/main.rs.backup
        
        # 在文件开头添加导入
        echo "mod stealth;" > temp_main.rs
        echo "use stealth::init_stealth;" >> temp_main.rs
        cat src/main.rs >> temp_main.rs
        
        # 在main函数中添加调用
        sed -i 's/fn main() {/fn main() {\n    init_stealth();/' temp_main.rs
        
        mv temp_main.rs src/main.rs
        
    - name: Build RustDesk
      run: cargo build --release
      
    - name: Create launcher script
      run: |
        cat > start_stealth.sh << 'EOF'
#!/bin/bash
echo "Starting RustDesk in stealth mode..."
./rustdesk --stealth
EOF
        chmod +x start_stealth.sh
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rustdesk-stealth
        path: |
          target/release/rustdesk
          start_stealth.sh
